<?xml version="1.0"?>
<block>
  <name>create_packet</name>
  <key>spp_create_packet</key>
  <category>[spp]</category>
  <import>execfile("/home/spacecraft/cygnus/gnuradio/gr-spp/python/create_packet.py")</import>
  <make>create_packet($apid, $packetType, $encrypt, $enckey)</make>
   <param>
     <name>APID</name>
     <key>apid</key>
     <type>int</type>
   </param>
   <param>
     <name>Packet Type</name>
     <key>packetType</key>
     <type>int</type>
   </param>
   <param>
     <name>Encryption Mode</name>
     <key>encrypt</key>
     <type>int</type>
   </param>
   <param>
     <name>Encryption Key</name>
     <key>enckey</key>
     <type>string</type>
   </param>

   <!-- Make one 'sink' node per input. Sub-nodes:
        * name (an identifier for the GUI)
        * type
        * vlen
        * optional (set to 1 for optional inputs) -->
   <sink>
     <name>in</name>
     <type>message</type>
   </sink>


   <!-- Make one 'source' node per output. Sub-nodes:
        * name (an identifier for the GUI)
        * type
        * vlen
        * optional (set to 1 for optional inputs) -->
   <source>
     <name>out</name>
     <type>message</type>
     <!--<vlen>40</vlen> --> <!--This sets the required length of vector coming out -->
   </source>
    <doc>
      This Block is designed to create a packet according to the Space Packet Protocol (SPP).
        Input: This should be of message format and contain the data that will become the payload of the packet.
        Output: This is of message format which will contain a single constructed SPP packet.
      The Packets are organized as such:
        Header: This is the first 6 bytes of the packet.
          The break down is as follows:
                header0 contains bits 0-15 of the packet which include:
                  packet Version Number(3 bits)
                  packet Type(1 bit)
                  second Header Flag(1 bit)
                  Aip Process ID(APID)(11 bits)
                header1 contains bits 16-31 of the packet which include:
                  Sequence Flags(2 bits)
                  Packet Sequence Count(14 bits)
                header2 contains bits 32-45 of the packet which include:
                  Packet Data Length(16 bits)
        Payload: This is the data that was passed into the create_packet block.
          The maximum size for this data in a single packet will be 1024kB
  </doc>
 </block>
